#!/usr/bin/make -f
# rules file for opensp
#
# The principle of these rules files are simplicity, robustness,
# ease of maintenance, and readability through abstraction
#
# Some bytes in this file may have been touched by Ian Jackson,
# so I can never remove his name from this file.  Oh boy.
# 
# This is derived almost entirely from the jade rules file

pkg		:= opensp
pkg-libsp1	:= libosp1
pkg-libsp1-dev	:= libosp1-dev

# default SGML pathing
default-catalogs	:= /usr/local/share/sgml/catalog:/usr/local/lib/sgml/catalog:/usr/lib/sgml/catalog
default-sgml-path	:= /usr/local/share/sgml:/usr/local/lib/sgml:/usr/lib/sgml

# directory abstraction
prefix-sp	:= debian/tmp
bindir-sp	:= $(prefix-sp)/usr/bin
confdir-sp	:= $(prefix-sp)/etc
libdir-sp	:= $(prefix-sp)/usr/lib/$(pkg-sp)
sgmldir-sp	:= $(prefix-sp)/usr/lib/sgml
docdir-sp	:= $(prefix-sp)/usr/doc/$(pkg-sp)
infodir-sp	:= $(prefix-sp)/usr/share/info
sharedir-sp	:= $(prefix-sp)/usr/share
mandir-sp	:= $(prefix-sp)/usr/share/man/man1

prefix-libsp1	:= debian/$(pkg-libsp1)
docdir-libsp1	:= $(prefix-libsp1)/usr/doc/$(pkg-libsp1)
libdir-libsp1	:= $(prefix-libsp1)/usr/lib

prefix-libsp1-dev	:= debian/$(pkg-libsp1-dev)
incdir-libsp1-dev	:= $(prefix-libsp1-dev)/usr/include/$(pkg-sp)
docdir-libsp1-dev	:= $(prefix-libsp1-dev)/usr/doc/$(pkg-libsp1-dev)
libdir-libsp1-dev	:= $(prefix-libsp1-dev)/usr/lib

# build tool abstraction
install_file	:= install -o root -g root -m 644 -p
install_script	:= install -o root -g root -m 755 -p
install_program	:= install -o root -g root -m 755 -p --strip
make_directory	:= install -d -o root -g root -m 755
compress	:= gzip -9f

# first version of package providing the right shlibs
SHLIBS_PKGVER	:= 1.4-pre1

# determine our version numbers
SRC_VERSION	:= $(shell LC_ALL=C dpkg-parsechangelog | grep ^Version: | sed 's/^Version: *//')

# determine our top level
SRCDIR		:= $(shell pwd)

# stuff for snapshot/cvs building
root_cmd		:= sudo
deb_build		:= dpkg-buildpackage -ppgp -r$(root_cmd)
cvs_build_dir		:= /usr/local/src/Packages/$(pkg-jade)
cvs_ver_build_dir	:= $(cvs_build_dir)/$(pkg-jade)-$(UPSTREAM_VERSION)
cvs_pure_src_dir	:= ..
cvs_pure_src		:= $(pkg-jade)-upstream

config.status:
	autoheader
	automake --add-missing
	aclocal
#	libtoolize --force --copy
	autoconf
	CFLAGS="-O2 --pipe" CXXFLAGS="-O2 --pipe" 			\
	   ./configure --prefix=/usr --sysconfdir=/etc			\
	   --mandir=/usr/share/man					\
	   --enable-http --enable-static --enable-shared		\
	   --enable-default-catalog=$(default-catalogs)			\
	   --enable-default-search-path=$(default-sgml-path)


build:	config.status
	$(checkdir)
	$(MAKE)
	touch build

clean:
	$(checkdir)
	rm -f build binary-arch
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f `find . -name "*~"`
	rm -rf $(prefix-sp) $(prefix-libsp1) $(prefix-libsp1-dev)
	rm -rf $(prefix-jade)
	rm -f debian/copyright debian/files* core
#	 these are created in the binary-arch rule
	rm -f debian/README.Debian.out debian/substvars debian/shlibs* \
	      debian/sp.conffiles
	dh_clean

binary-indep:	build
# There are no architecture-independent files to be uploaded
# generated by this package.

binary-arch:	build
	$(checkdir)
	$(checkroot)
	rm -rf $(prefix-jade) $(prefix-sp)
	rm -rf $(prefix-libsp1) $(prefix-libsp1-dev)

#	 lets create our debian-std copyright file; I like to ensure
#	 I have a verbatim copy of the upstream copyright by cat'ing
#	 the Debian-specific stuff to the end
	cat COPYING debian/copyright.Debian > debian/copyright

#	 substvar used to indicated our version of sp and libsp1
	: > debian/substvars
	echo "$(pkg-sp):Version=$(pkg-sp) (= $(SRC_VERSION))" \
	    >> debian/substvars
	echo "$(pkg-libsp1):Version=$(pkg-libsp1) (= $(SRC_VERSION))" \
	    >> debian/substvars
	echo "$(pkg-libsp1):ShlibVersion=$(pkg-libsp1) (>= $(SHLIBS_PKGVER))" \
	    >> debian/substvars
#	 std shlibs file, with the first version that supplied the version
#	  that applications should build with
	echo "libosp      1 $(pkg-libsp1) (>= $(SHLIBS_PKGVER))" > debian/shlibs.local
	echo "libogrove   1 $(pkg-libsp1) (>= $(SHLIBS_PKGVER))" >> debian/shlibs.local
	echo "libospgrove 1 $(pkg-libsp1) (>= $(SHLIBS_PKGVER))" >> debian/shlibs.local
	echo "libostyle   1 $(pkg-libsp1) (>= $(SHLIBS_PKGVER))" >> debian/shlibs.local

#	 substitution in README.Debian
	sed -e 's|%{default-catalogs}|$(default-catalogs)|;		\
		s|%{default-sgml-path}|$(default-sgml-path)|'		\
		debian/README.Debian > debian/README.Debian.out

##
##	 install sp suite
	$(make_directory) $(bindir-sp) $(sgmldir-sp) $(docdir-sp)	\
	    $(libdir-sp) $(mandir-sp) $(confdir-sp)
	$(MAKE) install PROGDIRS="nsgmls spam sgmlnorm spent sx" LIBDIRS="" \
	    prefix=$(SRCDIR)/$(prefix-sp)/usr INSTALL="$(install_script)"
	mv $(bindir-sp)/osx $(bindir-sp)/osgml2xml

#	 install declarations
	$(make_directory) $(sgmldir-sp)/declaration
	$(install_file) japan.sgmldecl $(sgmldir-sp)/declaration/japan.decl
	$(install_file) pubtext/xml.dcl $(sgmldir-sp)/declaration/xml.decl
	$(install_file) debian/sp_implied.decl $(sgmldir-sp)/declaration/
#	 compatability
	$(make_directory) $(sgmldir-sp)/sgml
	ln -s ../declaration/japan.decl $(sgmldir-sp)/sgml/japan.decl

#	 configuration file
	$(install_file) debian/sp.catalog $(confdir-sp)/
	: > debian/sp.conffiles
	echo $(subst $(prefix-sp),,$(confdir-sp))/sp.catalog >> debian/sp.conffiles

#	 install unicode stuff
	$(make_directory) $(libdir-sp)/unicode
	$(install_file) unicode/catalog unicode/demo.sgm unicode/unicode.syn \
	    $(libdir-sp)/unicode
	$(install_file) unicode/unicode.sd $(libdir-sp)/unicode/unicode.decl
	ln -s ../../$(pkg-sp)/unicode/unicode.decl	\
	    $(sgmldir-sp)/declaration/unicode.decl
	$(install_script) unicode/gensyntax.pl $(libdir-sp)/unicode

#	 install HTML documentation
	$(install_file) doc/*.htm $(docdir-sp)
#	 doc-base to register it
	$(make_directory) $(sharedir-sp)/doc-base
	$(install_file) debian/sp.doc-base $(sharedir-sp)/doc-base/$(pkg-sp)

#	 install man pages
	$(install_file) debian/nsgmls.1 debian/spam.1 debian/spent.1 \
	    $(mandir-sp)
#	 install undocumented links
	ln -s ../man7/undocumented.7.gz $(mandir-sp)/sgmlnorm.1.gz
	ln -s ../man7/undocumented.7.gz $(mandir-sp)/sgml2xml.1.gz


#	 install Debian-std docs
	$(install_file) README $(docdir-sp)/
	$(install_file) debian/copyright $(docdir-sp)/
	$(install_file) debian/TODO.Debian $(docdir-sp)/
	$(install_file) debian/README.Debian.out $(docdir-sp)/README.Debian
	$(install_file) debian/changelog $(docdir-sp)/changelog.Debian

#	 make sure control files are good
	sh -n debian/postinst.sp
	sh -n debian/prerm.sp
#	 install control files
	$(make_directory) $(prefix-sp)/DEBIAN
	$(install_script) debian/postinst.sp $(prefix-sp)/DEBIAN/postinst
	$(install_script) debian/prerm.sp $(prefix-sp)/DEBIAN/prerm
	$(install_file) debian/sp.conffiles $(prefix-sp)/DEBIAN/conffiles


##
##	 install libsp1
	$(make_directory) $(docdir-libsp1)
	$(make_directory) $(prefix-libsp1)/DEBIAN $(prefix-libsp1)/usr/lib

	$(MAKE) install PROGDIRS="" LIBDIRS="lib grove spgrove style"	\
	    prefix=$(SRCDIR)/$(prefix-libsp1)/usr INSTALL="$(install_file)"

	rm -f $(libdir-libsp1)/*.so $(libdir-libsp1)/*.a $(libdir-libsp1)/*.la

	$(install_file) debian/shlibs.local $(prefix-libsp1)/DEBIAN/shlibs

#	 make sure control files are good
	sh -n debian/postinst.libsp1
	$(install_script) debian/postinst.libsp1			\
	    $(prefix-libsp1)/DEBIAN/postinst

#	 install Debian-std docs
	$(install_file) README $(docdir-libsp1)/
	$(install_file) debian/copyright $(docdir-libsp1)/
	$(install_file) debian/README.sp-dev $(docdir-libsp1)/README.Debian
	$(install_file) debian/changelog $(docdir-libsp1)/changelog.Debian


##
##	 install libsp1-dev
	$(make_directory) $(incdir-libsp1-dev)
	$(make_directory) $(prefix-libsp1-dev)/DEBIAN			\
	    $(prefix-libsp1-dev)/usr/lib $(prefix-libsp1-dev)/usr/doc

	$(MAKE) install PROGDIRS="" LIBDIRS="lib grove spgrove style"	\
	    prefix=$(SRCDIR)/$(prefix-libsp1-dev)/usr INSTALL="$(install_script)"

	rm -f $(libdir-libsp1-dev)/*.so.* $(libdir-libsp1-dev)/*.la

#	 includes
	$(install_file) include/*.*            $(incdir-libsp1-dev)
	$(install_file) generic/*.h            $(incdir-libsp1-dev)
	$(install_file) grove/Node.h           $(incdir-libsp1-dev)
	$(install_file) spgrove/GroveApp.h     $(incdir-libsp1-dev)
	$(install_file) spgrove/GroveBuilder.h $(incdir-libsp1-dev)
	$(install_file) style/FOTBuilder.h style/GroveManager.h		\
	  style/DssslApp.h style/dsssl_ns.h    $(incdir-libsp1-dev)

#	 install Debian-std docs, actually, just link to /usr/doc/libsp1
	ln -s $(pkg-libsp1) $(docdir-libsp1-dev)

##
##	 install jade
	$(make_directory) $(bindir-jade) $(sgmldir-jade) $(docdir-jade) \
	    $(mandir-jade) $(libdir-jade)

	$(MAKE) install PROGDIRS="jade" LIBDIRS=""			\
	    prefix=$(SRCDIR)/$(prefix-jade)/usr INSTALL="$(install_script)"

#	 check these in dsssl/catalog
	$(make_directory) $(sgmldir-jade)/dtd
	$(install_file) dsssl/dsssl.dtd $(sgmldir-jade)/dtd
	$(install_file) dsssl/style-sheet.dtd $(sgmldir-jade)/dtd
	$(install_file) dsssl/fot.dtd $(sgmldir-jade)/dtd
	$(install_file) dsssl/catalog $(libdir-jade)
#	 fix the catalog to reference DTDs in the 'dtd' directory
	perl -pi -e 's|"([^"]+\.dtd)"|"dtd/$$1"|;' $(libdir-jade)/catalog
#	 make the links
	/usr/lib/sgml-data/sgml-catalog-check.pl -l -v 0 -d		\
		$(sgmldir-jade) $(libdir-jade)/catalog

#	 install our little cruft-removing script
	$(install_script) debian/scrub-dsssl-catalog-cruft $(libdir-jade)/

#	 install HTML documentation
	$(install_file) jadedoc/*.htm $(docdir-jade)
	ln -s jade.htm $(docdir-jade)/index.html
#	 doc-base to register it
	$(make_directory) $(sharedir-jade)/doc-base
	$(install_file) debian/jade.doc-base $(sharedir-jade)/doc-base/$(pkg-jade)

#	 install man pages
	$(install_file) debian/jade.1 $(mandir-jade)/

#	 install Debian-std docs
	$(install_file) debian/copyright $(docdir-jade)/
	$(install_file) debian/TODO.Debian $(docdir-jade)/
	$(install_file) debian/README.Debian.out $(docdir-jade)/README.Debian
	$(install_file) debian/changelog $(docdir-jade)/changelog.Debian

#	 install examples
	$(make_directory) $(docdir-jade)/examples
	$(install_file) dsssl/demo.* $(docdir-jade)/examples/

#	 make sure control files are good
	sh -n debian/postinst.jade
	sh -n debian/prerm.jade
#	 install control files
	$(make_directory) $(prefix-jade)/DEBIAN
	$(install_script) debian/postinst.jade $(prefix-jade)/DEBIAN/postinst
	$(install_script) debian/prerm.jade $(prefix-jade)/DEBIAN/prerm

	dh_strip -a
	dh_compress -a
	dh_fixperms -a

#	 put it all together
	cd $(prefix-libsp1)/usr/lib && LD_LIBRARY_PATH=.		\
	  dpkg-shlibdeps -pshlibs-$(pkg-libsp1) -O lib*.so.*.*	 	\
	  >> $(SRCDIR)/debian/substvars
	LD_LIBRARY_PATH=$(prefix-libsp1)/usr/lib			\
	  dpkg-shlibdeps -pshlibs-$(pkg-sp) $(bindir-sp)/*
	LD_LIBRARY_PATH=$(prefix-libsp1)/usr/lib			\
	  dpkg-shlibdeps -pshlibs-$(pkg-jade) $(bindir-jade)/*
#	 make control files, derive sp and sp-dev versions
	dpkg-gencontrol -isp -p$(pkg-sp) -P$(prefix-sp)
	dpkg-gencontrol -isp -p$(pkg-libsp1) -P$(prefix-libsp1)
	dpkg-gencontrol -isp -p$(pkg-libsp1-dev) -P$(prefix-libsp1-dev)
	dpkg-gencontrol -isp -p$(pkg-jade) -P$(prefix-jade)
	dpkg --build $(prefix-sp) ..
	dpkg --build $(prefix-libsp1) ..
	dpkg --build $(prefix-libsp1-dev) ..
	dpkg --build $(prefix-jade) ..
	touch binary-arch

# cvs snapshot building
cvs-build:
	[ -d $(cvs_pure_src_dir)/$(cvs_pure_src)/CVS ] || exit 1
	$(root_cmd) rm -rf $(cvs_ver_build_dir)
	rm -f $(cvs_build_dir)/$(pkg-jade)_$(UPSTREAM_VERSION).orig.tar.gz
#	 don't do cvs up or make the changelog
	install -d -m 755 $(cvs_ver_build_dir)
	GZIP=-9 tar czf $(cvs_build_dir)/$(pkg-jade)_$(UPSTREAM_VERSION).orig.tar.gz \
		-C $(cvs_pure_src_dir) --exclude CVS $(cvs_pure_src)
	tar cf - --exclude CVS . | tar xf - -C $(cvs_ver_build_dir)
	cd $(cvs_ver_build_dir) && $(deb_build)

define checkdir
	test -f debian/rules
endef

# Below here is fairly generic really

define checkroot
	test `id -u` = 0
endef

binary:		binary-indep binary-arch

.PHONY: binary binary-indep clean

#Local variables:
#mode: makefile
#End:
