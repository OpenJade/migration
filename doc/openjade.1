.\"
.\" Man page for openjade
.\"
.\" Copyright (c) 2002 Ian Castle
.\"
.\"
.TH openjade 1 "January 2002"
.LO 1
.SH NAME
openjade \- Process DSSSL stylesheets to format SGML and XML documents
.SH SYNOPSIS
openjade [\-vCegG2s] [\-b encoding] [\-f error_file] [\-c catalog_sysid] [\-D dir] [\-a link_type] [\-A arch] [\-E max_errors] [\-i entity] [\-w warning_type] [\-d dsssl_spec] [\-V variable[=value]] [\-t (fot|rtf|tex|mif|sgml|xml)] [\-o output_file] sysid ...
.SH DESCRIPTION
.B openjade
is an implementation of the ISO/IEC 10179:1996 standard DSSSL
(Document Style Semantics and Specification Language).
.B openjade is
based on James Clark's Jade implementation of DSSSL.
.B openjade
is a commmand-line application and a set of components.
The DSSSL engine inputs an SGML or XML document and can output a
variety of formats: XML, RTF, TeX, MIF (FrameMaker), SGML, or XML.
.SH OPTIONS
.TP
.B \-\^d " dsssl_spec"
This specifies that dsssl_spec is the system identifier of the DSSSL specification to be used.
.TP
.B \-\^G
Debug Mode. When an error occurs in the evaluation of an expression, OpenJade will display a stack trace. Note that this disables tail-call optimization.
.TP
.B \-\^c " filename"
The 
.B filename
arguments specify catalog files rather than the document entity. The document entity is specified by the first DOCUMENT entry in the catalog files.
.TP
.B \-\^s
Strict compliance mode. Currently the only effect is that jade doesn't use any predefined character names, sdata-entity mappings or name-characters. This is useful for checking that your stylesheet is portable to other DSSSL implementations and that it is strictly compliant to the DSSSL specifications.
.TP
.B \-\^t " output_type"
output_type specifies the type of output as follows: 
.TP
\ \ \ \(bu
.B fot
An XML representation of the flow object tree.
.TP
\ \ \ \(bu
.B rtf
.B rtf-95 
RTF (used for SGML/XML to RTF transformations)
Microsoft's Rich Text Format. rtf-95 produces output optimized for Word 95 rather than Word 97.
.TP
\ \ \ \(bu
.B tex
TeX (used for SGML/XML to TeX transformations)
.TP
\ \ \ \(bu
.B sgml
.B sgml-raw 
SGML (used for SGML/XML to SGML transformations). sgml-raw doesn't emit linebreaks in tags. 
.TP
\ \ \ \(bu
.B xml
.B xml-raw 
XML (used for SGML/XML to XML transformations). xml-raw doesn't emit linebreaks in tags. 
.TP
\ \ \ \(bu
.B html 
HTML (used for SGML/XML to HTML transformations)
.TP
\ \ \ \(bu
.B mif
MIF (used for SGML/XML to MIF transformations) .TP
.B \-\^o " output_file"
Write output to output_file instead of the default. The default filename is the name of the last input file with its extension replaced by the name of the type of output. If there is no input filename, then the extension is added onto jade-out. 
.TP
.B \-\^V " variable"
This is equivalent to doing (define variable #t) except that this definition will take priority over any definition of variable in a style-sheet. 
.TP
.B \-\^V " -V variable=value"
This is equivalent to doing (define variable "value") except that this definition will take priority over any definition of variable in a style-sheet.
.TP
.B \-\^V " (define variable value)"
This is equivalent to doing (define variable value) except that this definition will take priority over any definition of variable in a style-sheet.
Note that you will probably have to use some escaping mechanism for the spaces to get the entire scheme expression parsed as one cmdline argument.
.TP
.B \-\^wtype " (examples: wxml, wmixed, wsgmldecl, etc.) "
Control warnings and errors.
Multiple -w options are allowed. The following values of type enable warnings: 
.TP
\ \ \ \(bu
.B xml
Warn about constructs that are not allowed by XML.
.TP
\ \ \ \(bu
.B mixed
Warn about mixed content models that do not allow #pcdata anywhere.
.TP
\ \ \ \(bu
.B sgmldecl
Warn about various dubious constructions in the SGML declaration.
.TP
\ \ \ \(bu
.B should
Warn about various recommendations made in ISO 8879 that the document does not comply with. (Recommendations are expressed with ``should'', as distinct from requirements which are usually expressed with ``shall''.)
.TP
\ \ \ \(bu
.B default
Warn about defaulted references.
.TP
\ \ \ \(bu
.B duplicate 
Warn about duplicate entity declarations.
.TP
\ \ \ \(bu
.B undefined 
Warn about undefined elements: elements used in the DTD but not defined.
.TP
\ \ \ \(bu
.B unclosed
Warn about unclosed start and end-tags.
.TP
\ \ \ \(bu
.B empty
Warn about empty start and end-tags.
.TP
\ \ \ \(bu
.B net
Warn about net-enabling start-tags and null end-tags.
.TP
\ \ \ \(bu
.B min-tag
Warn about minimized start and end-tags. Equivalent to combination of unclosed, empty and net warnings.
.TP
\ \ \ \(bu
.B unused-map
Warn about unused short reference maps: maps that are declared with a short reference mapping declaration but never used in a short reference use declaration in the DTD.
.TP
\ \ \ \(bu
.B unused-param
Warn about parameter entities that are defined but not used in a DTD. Unused internal parameter entities whose text is INCLUDE or IGNORE won't get the warning.
.TP
\ \ \ \(bu
.B notation-sysid
Warn about notations for which no system identifier could be generated.
.TP
\ \ \ \(bu
.B all
Warn about conditions that should usually be avoided (in the opinion of the author). Equivalent to: mixed, should, default, undefined, sgmldecl, unused-map, unused-param, empty and unclosed. 
.TP
A warning can be disabled by using its name prefixed with no-. Thus -wall -wno-duplicate will enable all warnings except those about duplicate entity declarations.
.TP
The following values for warning_type disable errors:
.TP
\ \ \ \(bu
.B no-idref
Do not give an error for an ID reference value which no element has as its ID. The effect will be as if each attribute declared as an ID reference value had been declared as a name.
.TP
\ \ \ \(bu
.B no-significant 
Do not give an error when a character that is not a significant character in the reference concrete syntax occurs in a literal in the SGML declaration. This may be useful in conjunction with certain buggy test suites.
.TP
\ \ \ \(bu
.B no-valid
Do not require the document to be type-valid. This has the effect of changing the SGML declaration to specify VALIDITY NOASSERT and IMPLYDEF ATTLIST YES ELEMENT YES. An option of -wvalid has the effect of changing the SGML declaration to specify VALIDITY TYPE and IMPLYDEF ATTLIST NO ELEMENT NO. If neither -wvalid nor -wno-valid are specified, then the VALIDITY and IMPLYDEF specified in the SGML declaration will be used.
.SH "ENVIRONMENT"
.B openjade
ignores the SP_CHARSET_FIXED and SP_SYSTEM_CHARSET environment variables and always uses Unicode as its internal character set, as if SP_CHARSET_FIXED was 1 and SP_SYSTEM_CHARSET was unset. Thus only the SP_ENCODING environment variable is relevant to OpenJade's handling of character sets.
.SH "EXTENSIONS"
The following external procedures are available. These external procedures are defined by a prototype in the same manner as in the standard. To use one of these external procedures, you must make use of the standard external-procedure procedure, using a public identifier of

 "UNREGISTERED::James Clark//Procedure::name"

where name is the name given here, typically by including the following in the DSSSL specification:

(define name
  (external-procedure "UNREGISTERED::James Clark//Procedure::name"))

Note that external-procedure returns #f if it doesn't know about the specified public identifier. You can use this to enable your DSSSL specifications to work gracefully with other implementations which do not support these extensions. 

For external procedures added by the OpenJade team, use a public identifier of the form

"UNREGISTERED::OpenJade//Procedure::name". 

An easy way to get access to all external procedures is to use the style specification dsssl/extensions.dsl#procedures. The file dsssl/extensions.dsl also contains style specifications which make the nonstandard flow object classes and inherited characteristics supported by the backends available in a convenient way. 

.TP
.B Debugging

(debug obj)

Generates a message including the value of obj and then returns obj. 

.TP
.B Simple-page-sequence header/footer control

(if-first-page sosofo1 sosofo2)

This can be used only in the specification of the value of one of the header/footer characteristics of simple-page-sequence. It returns a sosofo that will display as sosofo1 if the page is the first page of the simple-page-sequence and as sosofo2 otherwise.

(if-front-page sosofo1 sosofo2)

This can be used only in the specification of the value of one of the header/footer characteristics of simple-page-sequence. It returns a sosofo that will display as sosofo1 if the page is a front (ie recto, odd-numbered) page and as sosofo2 if it is a back (ie verso, even-numbered) page.

.TP
.B Numbering

(all-element-number)
(all-element-number osnl)

This is the same as element-number except it counts elements with any generic identifier. If osnl is not an element returns #f, otherwise returns 1 plus the number of elements that started before osnl. This provides an efficient way of creating a unique identifier for any element in a document.

.TP
.B External entity access

(read-entity string)

This returns a string containing the contents of the external entity with system identifier string. This should be used only for textual entities (CDATA and SDATA), and not for binary entities (NDATA).

.TP
.B POSIX locale access

(language lang country)

This procedure returns an object of type language, if the system supports the specified language. lang is a string or symbol giving the two letter language code. country is a string or symbol giving the two letter country code.

This procedure uses POSIX locales. It is an OpenJade addition.

.TP
.B Extended standard procedures

(sgml-parse sysid #!key active: parent: architecture:)

This allows you to specify an SGML architecture with respect to which the document should be parsed. It is an OpenJade addition.

(expt q k)

This allows you to raise a quantity to an integral power. It is an OpenJade addition.
.SH "LIMITATIONS"
This section describes the limitations of the front-end (the general-purpose DSSSL engine); each backend also has its own limitations. 

.B openjade
only implements the
.I simple-page-sequence
page layout model of the DSSSL specification.

.B openjade
doesn't allow internal definions at the beginning of bodies and the (test => recipient) variant of cond clauses.

.B openjade
supports only a single, fixed grove plan which comprises the following modules:

.TP
\ \ \ \(bu
baseabs
.TP
\ \ \ \(bu
prlgabs0
.TP
\ \ \ \(bu
prlgabs1
.TP
\ \ \ \(bu
instabs
.TP
\ \ \ \(bu
basesds0
.TP
\ \ \ \(bu
instsds0
.TP
\ \ \ \(bu
subdcabs
.TP
It doesn't implement the following parts of SDQL: HyTime support, auxiliary parsing, node regular expressions.
.TP
Query rules, sosofo synchronisation, indirect sosofos, reference values, decoration areas and font properties are not supported.
.TP
Note that only inherited characteristics that are applicable to some supported flow object can be specified.
.TP
.B Character/glyph handling
.TP
It only supports a single pre-defined character repertoire. A character name of the form U-XXXX where XXXX are four upper-case hexadecimal digits, is recognized as referring to the Unicode character with that code. For many characters, it is also possible to use the ISO/IEC 10646 name in lower-case with words separated by hyphens.
.TP
Some common SDATA entity names from the ISO entity sets are recognized and mapped to characters. In addition an SDATA entity name of the form U-XXXX, where XXXX are four upper-case hexadecimal digits, is mapped to the Unicode character with that code.
.TP
OpenJade now supports the standard-chars, map-sdata-entity, add-name-chars, add-separator-chars and char-repertoire declaration element forms, allowing a style-sheet to define additional character names, sdata entity mappings, name characters (i.e. characters allowed in identifiers) and separator characters. Currently the only recognized character repertoire is the built-in repertoire. It has the public identifier "UNREGISTERED::OpenJade//Character Repertoire::OpenJade".
.TP
.B Validation
.TP
Several things that it would be desirable to have checked aren't checked: 
.TP
When the allowed value of an inherited characteristic is a symbol, OpenJade checks only that the value is a symbol that is allowed as the value of some characteristic; #t and #f are treated as a special kind of symbol in this case.
.TP
openjade doesn't check whether a flow object is occurring in a context where it is allowed.
.TP
openjade does not prevent flow objects being attached to the principal port of a flow object when the flow object shouldn't have a principal port.
Most type-checking is done at run-time not compile-time.
.TP
openjade does not check for non-inherited characteristics that are required to be specified.
.TP
It doesn't check that optional features that have been used were declared in the features form.
.TP
.B Other limitations
.TP
The following primitives are just stubs:
.TP
\ \ \ \(bu
.B char-script-case
Always returns last argument.
.TP
\ \ \ \(bu
.B address-visited?
Always returns #f.
.SH "SEE ALSO"
openjade-tex(1), openjade-rtf(1), openjade-sgml(1), openjade-mif(1)
